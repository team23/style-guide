import type { Linter } from 'eslint';
import stylisticJs from '@stylistic/eslint-plugin-js';

const maxLength = 140;
const stylisticConfig: Linter.Config = {
    name: 'team23/java-script/stylisticJs/optional',
    plugins: {
        '@stylistic/js': stylisticJs,
    },
    rules: {
        '@stylistic/js/array-bracket-newline': ['error', 'consistent'],
        '@stylistic/js/array-bracket-spacing': 'error',
        '@stylistic/js/array-element-newline': ['error', 'consistent'],
        '@stylistic/js/arrow-parens': ['error', 'as-needed'],
        '@stylistic/js/arrow-spacing': 'error',
        '@stylistic/js/block-spacing': 'error',
        '@stylistic/js/brace-style': ['error', '1tbs', { allowSingleLine: true }],
        '@stylistic/js/comma-dangle': ['error', 'always-multiline'],
        '@stylistic/js/comma-spacing': 'error',
        '@stylistic/js/comma-style': 'error',
        '@stylistic/js/computed-property-spacing': ['error', 'never'],
        '@stylistic/js/eol-last': 'error',
        '@stylistic/js/func-call-spacing': 'error',
        '@stylistic/js/function-call-argument-newline': ['error', 'consistent'],
        '@stylistic/js/function-call-spacing': 'error',
        '@stylistic/js/function-paren-newline': ['error', 'consistent'],
        '@stylistic/js/generator-star-spacing': 'error',
        '@stylistic/js/implicit-arrow-linebreak': 'error',
        // may cause performance issues with large codebase
        '@stylistic/js/indent': 'off',
        '@stylistic/js/jsx-quotes': 'error',
        '@stylistic/js/key-spacing': 'error',
        '@stylistic/js/keyword-spacing': 'error',
        '@stylistic/js/line-comment-position': 'error',
        '@stylistic/js/linebreak-style': 'error',
        '@stylistic/js/lines-around-comment': 'error',
        '@stylistic/js/max-len': [
            'error',
            maxLength,
        ],
        '@stylistic/js/max-statements-per-line': 'error',
        '@stylistic/js/multiline-comment-style': 'error',
        '@stylistic/js/multiline-ternary': ['error', 'always-multiline'],
        '@stylistic/js/new-parens': 'error',
        '@stylistic/js/newline-per-chained-call': 'error',
        '@stylistic/js/no-confusing-arrow': 'error',
        '@stylistic/js/no-extra-parens': 'error',
        '@stylistic/js/no-extra-semi': 'error',
        '@stylistic/js/no-floating-decimal': 'error',
        '@stylistic/js/no-multi-spaces': 'error',
        '@stylistic/js/no-multiple-empty-lines': 'error',
        '@stylistic/js/no-tabs': 'error',
        '@stylistic/js/no-trailing-spaces': 'error',
        '@stylistic/js/no-whitespace-before-property': 'error',
        '@stylistic/js/object-curly-newline': 'error',
        '@stylistic/js/object-curly-spacing': ['error', 'always'],
        '@stylistic/js/object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
        '@stylistic/js/operator-linebreak': 'error',
        '@stylistic/js/padding-line-between-statements': 'error',
        '@stylistic/js/quote-props': ['error', 'as-needed'],
        '@stylistic/js/quotes': ['error', 'single'],
        '@stylistic/js/rest-spread-spacing': 'error',
        '@stylistic/js/semi': ['error', 'always'],
        '@stylistic/js/semi-spacing': 'error',
        '@stylistic/js/semi-style': 'error',
        '@stylistic/js/space-before-blocks': 'error',
        '@stylistic/js/space-before-function-paren': [
            'error',
            {
                anonymous: 'never',
                named: 'never',
                asyncArrow: 'always',
            },
        ],
        '@stylistic/js/space-in-parens': 'error',
        '@stylistic/js/space-infix-ops': ['error', { int32Hint: true }],
        '@stylistic/js/space-unary-ops': 'error',
        '@stylistic/js/spaced-comment': 'error',
        '@stylistic/js/switch-colon-spacing': 'error',
        '@stylistic/js/template-curly-spacing': ['error', 'always'],
        '@stylistic/js/wrap-regex': 'error',
        '@stylistic/js/yield-star-spacing': 'error',
    },
};

export default [stylisticConfig];
